
    HTTP-request
Client <=> Server (Spring)
    HTTP-request


HTTP request structure:
(GET(1)/youtube(2) HTTP/1.1(3)  1 - request method, 2 - address, 3 - protocol) - Start line
.................
Host: youtube.com            ---------
User-Agent: Mozilla/5.0     | Headers |
Accept: text/html            ---------
.................
                    - Empty line between header and body
k1=v1&k2=v2&k3=v3   - Body


Methods - notify server, what client want to do

Get (most used - redirections of all type) - changes nothing on server, so body is empty
https://www.youtube.com/watch?v=z_b4tucWzSw&list=RDz_b4tucWzSw&start_radio=1
Request arguments are sent inside url after '?' in format of key=value, multiple entries are separated with '&'

Post - used to change something on server (commonly to add). Usually used to send data from web-forms, but also for
creating new accounts, repost, add news, load files in social media etc.
All arguments are stored inside request body.

Get VS Post:
1. Used to get data from server VS used to change data on server
2. Empty body VS can contain data
3. URL may include arguments VS no arguments inside URL (all of them contained in body)
4. Only entries key=value VS any type of data (xml, json, file etc)


HTTP response structure:
(HTTP/1.1(1) 200 OK(2)  1 - protocol, 2 - response code) - Start line
.................
Date: Wed, 27 Apr 2023               ---------
Server: Apache                      | Headers |
Content-Type: text/html              ---------
.................
                        - Empty line between header and body
<h1>Hello world!</h1>   - Body

Response statuses:
200 - OK
3xx - Redirect (server wants browser to go on another page)
4xx - Client error (not found, ...)
5xx - Server error (code, DB, ...)

Response Content-Type:
1) text/html
2) text/css
3) text/xml
4) application/json
5) ...


HTML 5 has only GET and POST methods. Still, HTTP got plenty of them (GET, POST, PATCH, DELETE, PUT, ...)
How to solve this problem?
<form method="post" action="people/12">
    <input type="hidden" name="_method" value="INSERT_HERE_REQUIRED_METHOD"
    ...
</form>

PATCH, DELETE, PUT requests are sent by POST request - inside of hidden field _method lays required method.
- Thymeleaf handles it fine.
- And Spring uses filter (object that catches all http requests) to look for _method field.
(filter is connected manually, but with spring boot you just need to write on line to automize it)